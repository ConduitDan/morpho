// Thomson problem of arranging charges on a sphere
// to minimize the electrostatic energy
import meshtools
import plot
import optimize
import functionals

var Np = 100

var build = MeshBuilder()
for (i in 1..Np) {
  var x = Matrix([2*random()-1, 2*random()-1, 2*random()-1])
  x/=x.norm()
  build.addvertex(x)
}
var mesh = build.build()

var problem = OptimizationProblem(mesh)

var lv = PairwisePotential(fn (r) 1/r, fn (r) -1/r^2)
problem.addenergy(lv)

var lsph = ScalarPotential(fn (x,y,z) x^2+y^2+z^2-1, fn (x,y,z) Matrix([2*x, 2*y, 2*z]))
problem.addlocalconstraint(lsph)

var opt = ShapeOptimizer(problem, mesh)

opt.stepsize=0.01/sqrt(Np)
opt.relax(5)
opt.linesearch(1000)

var g = Graphics()
for (i in 0...mesh.count()) {
  g.display(Sphere(mesh.vertexposition(i),1/sqrt(Np)))
}
Show(g)
